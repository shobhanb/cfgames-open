/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { getScoresScoreAffiliateIdYearGet } from '../fn/score/get-scores-score-affiliate-id-year-get';
import { GetScoresScoreAffiliateIdYearGet$Params } from '../fn/score/get-scores-score-affiliate-id-year-get';
import { getTeamScoresAllScoreTeamAllAffiliateIdYearGet } from '../fn/score/get-team-scores-all-score-team-all-affiliate-id-year-get';
import { GetTeamScoresAllScoreTeamAllAffiliateIdYearGet$Params } from '../fn/score/get-team-scores-all-score-team-all-affiliate-id-year-get';
import { getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet } from '../fn/score/get-team-scores-total-score-team-total-affiliate-id-year-get';
import { GetTeamScoresTotalScoreTeamTotalAffiliateIdYearGet$Params } from '../fn/score/get-team-scores-total-score-team-total-affiliate-id-year-get';
import { apiScoreModel } from '../models/api-score-model';
import { apiTeamScoreModel } from '../models/api-team-score-model';

@Injectable({ providedIn: 'root' })
export class apiScoreService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getScoresScoreAffiliateIdYearGet()` */
  static readonly GetScoresScoreAffiliateIdYearGetPath = '/score/{affiliate_id}/{year}';

  /**
   * Get Scores.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getScoresScoreAffiliateIdYearGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getScoresScoreAffiliateIdYearGet$Response(params: GetScoresScoreAffiliateIdYearGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiScoreModel>>> {
    return getScoresScoreAffiliateIdYearGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Scores.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getScoresScoreAffiliateIdYearGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getScoresScoreAffiliateIdYearGet(params: GetScoresScoreAffiliateIdYearGet$Params, context?: HttpContext): Observable<Array<apiScoreModel>> {
    return this.getScoresScoreAffiliateIdYearGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiScoreModel>>): Array<apiScoreModel> => r.body)
    );
  }

  /** Path part for operation `getTeamScoresAllScoreTeamAllAffiliateIdYearGet()` */
  static readonly GetTeamScoresAllScoreTeamAllAffiliateIdYearGetPath = '/score/team/all/{affiliate_id}/{year}';

  /**
   * Get Team Scores All.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTeamScoresAllScoreTeamAllAffiliateIdYearGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresAllScoreTeamAllAffiliateIdYearGet$Response(params: GetTeamScoresAllScoreTeamAllAffiliateIdYearGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiTeamScoreModel>>> {
    return getTeamScoresAllScoreTeamAllAffiliateIdYearGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Team Scores All.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTeamScoresAllScoreTeamAllAffiliateIdYearGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresAllScoreTeamAllAffiliateIdYearGet(params: GetTeamScoresAllScoreTeamAllAffiliateIdYearGet$Params, context?: HttpContext): Observable<Array<apiTeamScoreModel>> {
    return this.getTeamScoresAllScoreTeamAllAffiliateIdYearGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiTeamScoreModel>>): Array<apiTeamScoreModel> => r.body)
    );
  }

  /** Path part for operation `getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet()` */
  static readonly GetTeamScoresTotalScoreTeamTotalAffiliateIdYearGetPath = '/score/team/total/{affiliate_id}/{year}';

  /**
   * Get Team Scores Total.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet$Response(params: GetTeamScoresTotalScoreTeamTotalAffiliateIdYearGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiTeamScoreModel>>> {
    return getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Team Scores Total.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet(params: GetTeamScoresTotalScoreTeamTotalAffiliateIdYearGet$Params, context?: HttpContext): Observable<Array<apiTeamScoreModel>> {
    return this.getTeamScoresTotalScoreTeamTotalAffiliateIdYearGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiTeamScoreModel>>): Array<apiTeamScoreModel> => r.body)
    );
  }

}
