/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { getScoresScoreAffiliateIdYearOrdinalGet } from '../fn/score/get-scores-score-affiliate-id-year-ordinal-get';
import { GetScoresScoreAffiliateIdYearOrdinalGet$Params } from '../fn/score/get-scores-score-affiliate-id-year-ordinal-get';
import { getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet } from '../fn/score/get-team-scores-ordinal-score-team-affiliate-id-year-ordinal-get';
import { GetTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet$Params } from '../fn/score/get-team-scores-ordinal-score-team-affiliate-id-year-ordinal-get';
import { getTeamScoresOverallScoreTeamAffiliateIdYearGet } from '../fn/score/get-team-scores-overall-score-team-affiliate-id-year-get';
import { GetTeamScoresOverallScoreTeamAffiliateIdYearGet$Params } from '../fn/score/get-team-scores-overall-score-team-affiliate-id-year-get';
import { apiScoreModel } from '../models/api-score-model';
import { apiTeamScoreModel } from '../models/api-team-score-model';

@Injectable({ providedIn: 'root' })
export class apiScoreService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getScoresScoreAffiliateIdYearOrdinalGet()` */
  static readonly GetScoresScoreAffiliateIdYearOrdinalGetPath = '/score/{affiliate_id}/{year}/{ordinal}';

  /**
   * Get Scores.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getScoresScoreAffiliateIdYearOrdinalGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getScoresScoreAffiliateIdYearOrdinalGet$Response(params: GetScoresScoreAffiliateIdYearOrdinalGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiScoreModel>>> {
    return getScoresScoreAffiliateIdYearOrdinalGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Scores.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getScoresScoreAffiliateIdYearOrdinalGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getScoresScoreAffiliateIdYearOrdinalGet(params: GetScoresScoreAffiliateIdYearOrdinalGet$Params, context?: HttpContext): Observable<Array<apiScoreModel>> {
    return this.getScoresScoreAffiliateIdYearOrdinalGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiScoreModel>>): Array<apiScoreModel> => r.body)
    );
  }

  /** Path part for operation `getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet()` */
  static readonly GetTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGetPath = '/score/team/{affiliate_id}/{year}/{ordinal}';

  /**
   * Get Team Scores Ordinal.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet$Response(params: GetTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiTeamScoreModel>>> {
    return getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Team Scores Ordinal.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet(params: GetTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet$Params, context?: HttpContext): Observable<Array<apiTeamScoreModel>> {
    return this.getTeamScoresOrdinalScoreTeamAffiliateIdYearOrdinalGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiTeamScoreModel>>): Array<apiTeamScoreModel> => r.body)
    );
  }

  /** Path part for operation `getTeamScoresOverallScoreTeamAffiliateIdYearGet()` */
  static readonly GetTeamScoresOverallScoreTeamAffiliateIdYearGetPath = '/score/team/{affiliate_id}/{year}/';

  /**
   * Get Team Scores Overall.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTeamScoresOverallScoreTeamAffiliateIdYearGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresOverallScoreTeamAffiliateIdYearGet$Response(params: GetTeamScoresOverallScoreTeamAffiliateIdYearGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiTeamScoreModel>>> {
    return getTeamScoresOverallScoreTeamAffiliateIdYearGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Team Scores Overall.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTeamScoresOverallScoreTeamAffiliateIdYearGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresOverallScoreTeamAffiliateIdYearGet(params: GetTeamScoresOverallScoreTeamAffiliateIdYearGet$Params, context?: HttpContext): Observable<Array<apiTeamScoreModel>> {
    return this.getTeamScoresOverallScoreTeamAffiliateIdYearGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiTeamScoreModel>>): Array<apiTeamScoreModel> => r.body)
    );
  }

}
