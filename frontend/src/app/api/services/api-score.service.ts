/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { getIndividualScoresScoreIndividualGet } from '../fn/score/get-individual-scores-score-individual-get';
import { GetIndividualScoresScoreIndividualGet$Params } from '../fn/score/get-individual-scores-score-individual-get';
import { getLeaderboardScoresScoreLeaderboardGet } from '../fn/score/get-leaderboard-scores-score-leaderboard-get';
import { GetLeaderboardScoresScoreLeaderboardGet$Params } from '../fn/score/get-leaderboard-scores-score-leaderboard-get';
import { getMyScoresScoreMeGet } from '../fn/score/get-my-scores-score-me-get';
import { GetMyScoresScoreMeGet$Params } from '../fn/score/get-my-scores-score-me-get';
import { getTeamScoresScoreTeamGet } from '../fn/score/get-team-scores-score-team-get';
import { GetTeamScoresScoreTeamGet$Params } from '../fn/score/get-team-scores-score-team-get';
import { apiIndividualScoreModel } from '../models/api-individual-score-model';
import { apiLeaderboardScoreModel } from '../models/api-leaderboard-score-model';
import { apiTeamScoreModel } from '../models/api-team-score-model';
import { apiUserScoreModel } from '../models/api-user-score-model';

@Injectable({ providedIn: 'root' })
export class apiScoreService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getLeaderboardScoresScoreLeaderboardGet()` */
  static readonly GetLeaderboardScoresScoreLeaderboardGetPath = '/score/leaderboard';

  /**
   * Get Leaderboard Scores.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getLeaderboardScoresScoreLeaderboardGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getLeaderboardScoresScoreLeaderboardGet$Response(params: GetLeaderboardScoresScoreLeaderboardGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiLeaderboardScoreModel>>> {
    return getLeaderboardScoresScoreLeaderboardGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Leaderboard Scores.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getLeaderboardScoresScoreLeaderboardGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getLeaderboardScoresScoreLeaderboardGet(params: GetLeaderboardScoresScoreLeaderboardGet$Params, context?: HttpContext): Observable<Array<apiLeaderboardScoreModel>> {
    return this.getLeaderboardScoresScoreLeaderboardGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiLeaderboardScoreModel>>): Array<apiLeaderboardScoreModel> => r.body)
    );
  }

  /** Path part for operation `getIndividualScoresScoreIndividualGet()` */
  static readonly GetIndividualScoresScoreIndividualGetPath = '/score/individual';

  /**
   * Get Individual Scores.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getIndividualScoresScoreIndividualGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getIndividualScoresScoreIndividualGet$Response(params: GetIndividualScoresScoreIndividualGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiIndividualScoreModel>>> {
    return getIndividualScoresScoreIndividualGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Individual Scores.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getIndividualScoresScoreIndividualGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getIndividualScoresScoreIndividualGet(params: GetIndividualScoresScoreIndividualGet$Params, context?: HttpContext): Observable<Array<apiIndividualScoreModel>> {
    return this.getIndividualScoresScoreIndividualGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiIndividualScoreModel>>): Array<apiIndividualScoreModel> => r.body)
    );
  }

  /** Path part for operation `getTeamScoresScoreTeamGet()` */
  static readonly GetTeamScoresScoreTeamGetPath = '/score/team';

  /**
   * Get Team Scores.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTeamScoresScoreTeamGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresScoreTeamGet$Response(params: GetTeamScoresScoreTeamGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiTeamScoreModel>>> {
    return getTeamScoresScoreTeamGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get Team Scores.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTeamScoresScoreTeamGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTeamScoresScoreTeamGet(params: GetTeamScoresScoreTeamGet$Params, context?: HttpContext): Observable<Array<apiTeamScoreModel>> {
    return this.getTeamScoresScoreTeamGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiTeamScoreModel>>): Array<apiTeamScoreModel> => r.body)
    );
  }

  /** Path part for operation `getMyScoresScoreMeGet()` */
  static readonly GetMyScoresScoreMeGetPath = '/score/me';

  /**
   * Get My Scores.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getMyScoresScoreMeGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  getMyScoresScoreMeGet$Response(params?: GetMyScoresScoreMeGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<apiUserScoreModel>>> {
    return getMyScoresScoreMeGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get My Scores.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getMyScoresScoreMeGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getMyScoresScoreMeGet(params?: GetMyScoresScoreMeGet$Params, context?: HttpContext): Observable<Array<apiUserScoreModel>> {
    return this.getMyScoresScoreMeGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<apiUserScoreModel>>): Array<apiUserScoreModel> => r.body)
    );
  }

}
