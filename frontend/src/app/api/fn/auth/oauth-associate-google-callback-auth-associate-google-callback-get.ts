/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { apiUserRead } from '../../models/api-user-read';

export interface OauthAssociateGoogleCallbackAuthAssociateGoogleCallbackGet$Params {
  code?: (string | null);
  code_verifier?: (string | null);
  state?: (string | null);
  error?: (string | null);
}

export function oauthAssociateGoogleCallbackAuthAssociateGoogleCallbackGet(http: HttpClient, rootUrl: string, params?: OauthAssociateGoogleCallbackAuthAssociateGoogleCallbackGet$Params, context?: HttpContext): Observable<StrictHttpResponse<apiUserRead>> {
  const rb = new RequestBuilder(rootUrl, oauthAssociateGoogleCallbackAuthAssociateGoogleCallbackGet.PATH, 'get');
  if (params) {
    rb.query('code', params.code, {});
    rb.query('code_verifier', params.code_verifier, {});
    rb.query('state', params.state, {});
    rb.query('error', params.error, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<apiUserRead>;
    })
  );
}

oauthAssociateGoogleCallbackAuthAssociateGoogleCallbackGet.PATH = '/auth/associate/google/callback';
