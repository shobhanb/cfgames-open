server {
    listen 80;
    server_name cfgames.site ~^(.+)\.cfgames\.site$;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    # Allow certbot challenge responses
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# Bare domain (no subdomain)
server {
    listen 443 ssl;
    server_name cfgames.site;
    
    # Use default certificate
    ssl_certificate /etc/letsencrypt/live/cfgames.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cfgames.site/privkey.pem;
    
    # Redirect to a default subdomain
    return 301 https://cfmf.cfgames.site$request_uri;
}

# All HTTPS subdomains
server {
    listen 443 ssl;
    
    # Capture subdomain name into $subdomain - only match actual subdomains
    server_name ~^(?<subdomain>[a-zA-Z0-9-]+)\.cfgames\.site$;
    
    # SSL configuration with dynamic subdomain
    ssl_certificate /etc/letsencrypt/live/$subdomain.cfgames.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$subdomain.cfgames.site/privkey.pem;
    
    # Handle errors if certificate doesn't exist
    error_page 495 496 497 = @no_cert;
    location @no_cert {
        return 444;  # Connection closed without response
    }

    # Serve subdomain-specific manifest
    location = /manifest.webmanifest {
        root /usr/share/nginx/html;
        try_files /$subdomain.manifest.webmanifest =404;
        add_header Content-Type application/manifest+json;
    }
    
    # Serve subdomain-specific logo files
    location = /icons/logo_192.jpg {
        root /usr/share/nginx/html;
        try_files /icons/$subdomain/logo_192.jpg /icons/common/logo_192.jpg =404;
    }
    
    location = /icons/logo_512.jpg {
        root /usr/share/nginx/html;
        try_files /icons/$subdomain/logo_512.jpg /icons/common/logo_512.jpg =404;
    }

    # Frontend location
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache";
    }

    # Backend API proxy
    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr; 
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;
    }
}
